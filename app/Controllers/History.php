<?php

// App Name: Custom GPT
// Author: DigiForge 
// App version: 1.0
// App url: https://digiforge.in
// HTML Template: Admin LTE 3 (https://adminlte.io)
// API libaray URL: https://github.com/orhanerday/open-ai

// This is a History controller, which controls and saves all the history created by users
// It is controlled using Prompt Model, so basically you can view all the history as well as decide to keep it or delete it

namespace App\Controllers;
use CodeIgniter\Controller;
use App\Models\PromptModel;
use App\Models\TeamModel;

class History extends BaseController
{
        public $promptModel;
        public $teamModel;
        public $session;

        public function __construct()
        {
                helper(['form']);
                helper(['date']);
                helper(['text']);

                $this->session = \Config\Services::session(); 
                $this->promptModel = new PromptModel(); 
                $this->teamModel = new TeamModel(); 
        }

        //All history of AI tools
        public function usage_history() 
        {
                if(!session()->has('logged_staff')) 
                {
                   return redirect()->to(base_url(). "home/login");
                } 
                $data = [];
                $uid = session()->get('logged_staff');
                
                $data['teamdata'] = $this->teamModel->getUserData($uid);
                $data['profilepic'] = $this->teamModel->getProfilePic($uid);
                $data['allusage'] = $this->promptModel->getAllHistory($uid); //Fetching the history of all the tools according to the logged in user

                echo view('Templates/header');
                echo view('Templates/navigation', $data);
                echo view('Templates/sidebar', $data);
                echo view('tool_history', $data);
                echo view('Templates/copyright');
                echo view('Templates/footer');
        }

        //Details for every single prompt usage
        public function usage_detail($id = null)
        {
                if(!session()->has('logged_staff')) 
                {
                   return redirect()->to(base_url(). "home/login");
                } 
                $data = [];
                $uid = session()->get('logged_staff');
                
                $data['teamdata'] = $this->teamModel->getUserData($uid);
                $data['profilepic'] = $this->teamModel->getProfilePic($uid);
                $data['usage_detail'] = $this->promptModel->history_details($id); // Fetching the details of the tool usage according to the id generated while saving the data as history.

                echo view('Templates/header');
                echo view('Templates/navigation', $data);
                echo view('Templates/sidebar', $data);
                echo view('tool_details', $data);
                echo view('Templates/copyright');
                echo view('Templates/footer');
        }

        //Function to delete all history
        public function delete_usage()
        {
                if(!session()->has('logged_staff')) 
                {
                   return redirect()->to(base_url(). "home/login");
                } 
                $data = [];
                $uid = session()->get('logged_staff');
                
                $status = $this->promptModel->deleteAllHistory($uid); // Calling the delete all history function from the prompt model the history will be deleted according to the user account id. That means history will be only deleted according to its user id and it will not empty the entire table this is in order to save the usage history generated by other users.

                if($status == true) {

                        $this->session->setTempdata('error', 'Could not delete all the entries', 3);
                        return redirect()->to(base_url()."history/usage_history"); // If the history is not deleted the page reload and shows the error

                } else {

                        $this->session->setTempdata('success', 'All entries successfully deleted', 3);
                        return redirect()->to(base_url()."history/usage_history"); //If the history is deleted the page reloads and shows success

                }
                header('location:' . base_url() . "history/usage_history"); //If nothing happpens the page will just reload
        }

        //Function to delete history one by one
        public function delete_history($id = null)
        {
                if(!session()->has('logged_staff')) 
                {
                   return redirect()->to(base_url(). "home/login");
                } 
                $data = [];
                $uid = session()->get('logged_staff');

                $status = $this->promptModel->deleteHistory($id); // Calling the delete history function from the prompt model and deleting the history according to its ID and not user id this will delete only specific entry.

                if($status == true) {

                        $this->session->setTempdata('error', 'Something went wrong could not delete the entry', 3);
                        return redirect()->to(base_url()."history/usage_history"); // If the history is not deleted the page reload and shows the error

                } else {

                        $this->session->setTempdata('success', 'Entry successfully deleted', 3);
                        return redirect()->to(base_url()."history/usage_history"); //If the history is deleted the page reloads and shows success

                }
                header('location:' . base_url() . "history/usage_history"); //If nothing happpens the page will just reload
        }
}
